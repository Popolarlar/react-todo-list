{"version":3,"sources":["views/components/TodoListItem.js","actions/todoThunk.js","selectors/selectors.js","views/components/NewTodoForm.js","actions/todoAction.js","views/components/TodoList.js","views/components/ScrollTop.js","views/components/MenuAppBar.js","theme.js","views/containers/App.js","serviceWorker.js","stores/reducers.js","stores/store.js","index.js"],"names":["TodoListItem","todo","onRemovePressed","onCompletePressed","ListItem","key","dense","button","Checkbox","tabIndex","disableRipple","onClick","id","checked","isCompleted","ListItemText","primary","text","secondary","Typography","component","variant","color","Date","createdAt","toLocaleDateString","ListItemSecondaryAction","IconButton","aria-label","displayAlert","alert","getTodos","state","todos","data","getTodosLoading","isLoading","getIncompleteTodos","createSelector","filter","getCompletedTodos","connect","dispatch","onCreatePressed","getState","a","requestBody","JSON","stringify","fetch","headers","method","body","response","json","responseBody","type","payload","addTodoRequest","useState","inputValue","setInputValue","onSubmit","event","preventDefault","some","TextField","value","onChange","target","placeholder","margin","fullWidth","completedTodos","incompleteTodos","deletedTodo","deleteTodoRequest","updatedTodo","updateTodoRequest","startLoadingTodos","useEffect","loadingMessage","todoContent","ListSubheader","map","doneContent","content","List","useStyles","makeStyles","theme","root","position","bottom","spacing","right","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","grow","flexGrow","title","display","textAlign","breakpoints","up","sectionDesktop","sectionMobile","MenuAppBar","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Link","href","rel","AppBar","Toolbar","aria-controls","aria-haspopup","currentTarget","createMuiTheme","palette","main","offset","mixins","toolbar","App","ThemeProvider","CssBaseline","Container","maxWidth","Fab","size","location","hostname","match","todosInitialState","reducers","action","concat","rootReducer","combineReducers","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b727f94.chunk.js","sourcesContent":["import React from \"react\";\n// import styled from \"styled-components\";\nimport {\n  ListItem,\n  Checkbox,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst TodoListItem = ({ todo, onRemovePressed, onCompletePressed }) => {\n  return (\n    <ListItem key={todo.key} dense button>\n      <Checkbox\n        tabIndex={-1}\n        disableRipple\n        onClick={() => onCompletePressed(todo.id)}\n        checked={todo.isCompleted ? true : false}\n      />\n\n      <ListItemText\n        primary={todo.text}\n        secondary={\n          <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n            {new Date(todo.createdAt).toLocaleDateString()}\n          </Typography>\n        }\n      />\n\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"Delete\"\n          onClick={() => onRemovePressed(todo.id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default TodoListItem;\n","import {\n  createTodo,\n  removeTodo,\n  completeTodo,\n  loadTodosInProgress,\n  loadTodosFailure,\n  loadTodosSuccess,\n} from \"./todoAction\";\n\n// This is a function as middleware to dispatch different actions with async ability\n// GET http://localhost:8080/api/todos\nexport const loadTodos = () => async (dispatch, getState) => {\n  try {\n    dispatch(loadTodosInProgress());\n\n    const response = await fetch(\"http://localhost:8080/api/todos\");\n    const responseBody = await response.json();\n    dispatch(loadTodosSuccess(responseBody));\n  } catch (error) {\n    dispatch(loadTodosFailure());\n    dispatch(displayAlert(error));\n  }\n};\n\n// POST http://localhost:8080/api/todos with body{text:\"...\"}\nexport const addTodoRequest = (text) => async (dispatch, getState) => {\n  try {\n    const requestBody = JSON.stringify({ text });\n    const response = await fetch(\"http://localhost:8080/api/todos\", {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"post\",\n      body: requestBody,\n    });\n    const responseBody = await response.json();\n\n    dispatch(createTodo(responseBody));\n  } catch (error) {\n    dispatch(displayAlert(error));\n  }\n};\n\n// DELETE http://localhost:8080/api/todos/:id\nexport const deleteTodoRequest = (id) => async (dispatch, getState) => {\n  try {\n    const response = await fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: \"delete\",\n    });\n    const responseBody = await response.json();\n    dispatch(removeTodo(responseBody));\n  } catch (error) {\n    dispatch(displayAlert(error));\n  }\n};\n\n// POST http://localhost:8080/api/todos/:id/completed\nexport const updateTodoRequest = (id) => async (dispatch, getState) => {\n  try {\n    const response = await fetch(\n      `http://localhost:8080/api/todos/${id}/completed`,\n      {\n        method: \"post\",\n      }\n    );\n    const responseBody = await response.json();\n    dispatch(completeTodo(responseBody));\n  } catch (error) {\n    dispatch(displayAlert(error));\n  }\n};\n\nexport const displayAlert = (text) => {\n  alert(text);\n};\n","import { createSelector } from \"reselect\";\n\n// Extract the selection of state property into functions\nexport const getTodos = (state) => {\n  return state.todos.data;\n};\n\nexport const getTodosLoading = (state) => {\n  return state.todos.isLoading;\n};\n\nexport const getIncompleteTodos = createSelector(getTodos, (todos) =>\n  todos.filter((todo) => !todo.isCompleted)\n);\n\nexport const getCompletedTodos = createSelector(getTodos, (todos) =>\n  todos.filter((todo) => todo.isCompleted)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodoRequest } from \"../../actions/todoThunk\";\nimport { getTodos } from \"../../selectors/selectors\";\nimport { TextField } from \"@material-ui/core\";\n\n// Styled-components\n// const NewTodoFormConatiner = styled.div`\n//   border-radius: 8px;\n//   padding: 16px;\n//   text-align: center;\n//   box-shadow: 0 4px 8px grey;\n// `;\n\n// const NewTodoInput = styled.input`\n//   font-size: 16px;\n//   padding: 8px;\n//   border: none;\n//   border-bottom: 2px solid #ddd;\n//   border-radius: 8px;\n//   width: 70%;\n//   outline: none;\n// `;\n\n// const NewTodoButton = styled.button`\n//   font-size: 16px;\n//   padding: 8px;\n//   border: none;\n//   border-radius: 8px;\n//   outline: none;\n//   cursor: pointer;\n//   margin-left: 8px;\n//   width: 20%;\n//   background-color: lightskyblue;\n//   color: white;\n// `;\n\nconst NewTodoForm = ({ todos, onCreatePressed }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        // Check if the text is existed in the current state:todos\n        const isDuplicateText = todos.some((todo) => todo.text === inputValue);\n\n        if (!isDuplicateText) {\n          onCreatePressed(inputValue);\n          setInputValue(\"\");\n        }\n      }}\n    >\n      <TextField\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n        placeholder=\"exciting new todo!\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        fullWidth\n      ></TextField>\n    </form>\n  );\n};\n\n// export default NewTodoForm;\n\n// Pass in the object that represents the entire Redux state: todos\nconst mapStateToProps = (state) => ({\n  // todos: state.todos,\n  todos: getTodos(state),\n});\n\n// dispatch(action) -> to store which will change the state\nconst mapDispatchToProps = (dispatch) => ({\n  // onCreatePressed: (text) => dispatch(createTodo(text)),\n  onCreatePressed: (text) => dispatch(addTodoRequest(text)),\n});\n\n// connect()(): higher order function that we call it with two different sets of arguments\n// connect()(the component we want to connect to the redux store: NewTodoForm)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTodoForm);\n","/*\n * Action types\n */\n\nexport const CREATE_TODO = \"CREATE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const COMPLETE_TODO = \"COMPLETE_TODO\";\nexport const LOAD_TODOS_IN_PROGRESS = \"LOAD_TODOS_IN_PROGRESS\";\nexport const LOAD_TODOS_SUCCESS = \"LOAD_TODOS_SUCCESS\";\nexport const LOAD_TODOS_FAILURE = \"LOAD_TODOS_FAILURE\";\n\n/*\n * Action creator\n */\nexport const createTodo = (todo) => ({\n  type: CREATE_TODO,\n  payload: { todo },\n});\n\nexport const removeTodo = (deletedTodo) => ({\n  type: REMOVE_TODO,\n  payload: { deletedTodo },\n});\n\nexport const completeTodo = (updatedTodo) => ({\n  type: COMPLETE_TODO,\n  payload: { updatedTodo },\n});\n\nexport const loadTodosInProgress = () => ({\n  type: LOAD_TODOS_IN_PROGRESS,\n});\n\nexport const loadTodosSuccess = (todos) => ({\n  type: LOAD_TODOS_SUCCESS,\n  payload: { todos },\n});\n\nexport const loadTodosFailure = () => ({\n  type: LOAD_TODOS_FAILURE,\n});\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TodoListItem from \"./TodoListItem\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport {\n  loadTodos,\n  deleteTodoRequest,\n  updateTodoRequest,\n} from \"../../actions/todoThunk\";\nimport {\n  getTodosLoading,\n  getIncompleteTodos,\n  getCompletedTodos,\n} from \"../../selectors/selectors\";\n\nimport { List, ListSubheader } from \"@material-ui/core\";\n\nconst TodoList = ({\n  completedTodos,\n  incompleteTodos,\n  isLoading,\n  onRemovePressed,\n  onCompletePressed,\n  startLoadingTodos,\n}) => {\n  useEffect(() => {\n    startLoadingTodos();\n  }, []);\n\n  const loadingMessage = <div>Loading todos...</div>;\n\n  const todoContent = (\n    <>\n      <ListSubheader>Incomplete:</ListSubheader>\n      {/* <Typography varient=\"h2\">Incomplete:</Typography> */}\n\n      {incompleteTodos.map((todo) => (\n        <TodoListItem\n          key={todo.id}\n          todo={todo}\n          onRemovePressed={onRemovePressed}\n          onCompletePressed={onCompletePressed}\n        />\n      ))}\n    </>\n  );\n\n  const doneContent = (\n    <>\n      <ListSubheader>Complete:</ListSubheader>\n      {completedTodos.map((todo) => (\n        <TodoListItem\n          key={todo.id}\n          todo={todo}\n          onRemovePressed={onRemovePressed}\n          onCompletePressed={onCompletePressed}\n        />\n      ))}\n    </>\n  );\n\n  const content = (\n    <>\n      <NewTodoForm />\n      <List>\n        {todoContent}\n        {doneContent}\n      </List>\n    </>\n  );\n\n  return isLoading ? loadingMessage : content;\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: getTodosLoading(state),\n  completedTodos: getCompletedTodos(state),\n  incompleteTodos: getIncompleteTodos(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemovePressed: (id) => dispatch(deleteTodoRequest(id)),\n  onCompletePressed: (id) => dispatch(updateTodoRequest(id)),\n  startLoadingTodos: () => dispatch(loadTodos()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from \"react\";\nimport { Zoom, useScrollTrigger } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ScrollTop;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Link,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: \"block\",\n    textAlign: \"center\",\n    flexGrow: 1,\n    color: \"white\",\n    [theme.breakpoints.up(\"md\")]: {\n      textAlign: \"start\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    color: \"white\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    position: \"absolute\",\n    right: \"0px\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nfunction MenuAppBar() {\n  const classes = useStyles();\n\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <Link href=\"mailto:ming.jin.yeh@gmail.com\" color=\"inherit\">\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <EmailIcon />\n          </IconButton>\n        </Link>\n      </MenuItem>\n      <MenuItem>\n        <Link\n          href=\"https://www.linkedin.com/in/ming-jin-yeh/\"\n          color=\"inherit\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <LinkedInIcon />\n          </IconButton>\n        </Link>\n      </MenuItem>\n      <MenuItem>\n        <Link\n          href=\"https://github.com/Popolarlar\"\n          color=\"inherit\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n            <GitHubIcon />\n          </IconButton>\n        </Link>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            Todo List\n          </Typography>\n          {/* <div className={classes.grow} /> */}\n          <div className={classes.sectionDesktop}>\n            <Link href=\"mailto:ming.jin.yeh@gmail.com\" color=\"inherit\">\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <EmailIcon />\n              </IconButton>\n            </Link>\n            <Link\n              href=\"https://www.linkedin.com/in/ming-jin-yeh/\"\n              color=\"inherit\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <LinkedInIcon />\n              </IconButton>\n            </Link>\n            <Link\n              href=\"https://github.com/Popolarlar\"\n              color=\"inherit\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <GitHubIcon />\n              </IconButton>\n            </Link>\n          </div>\n\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon color=\"action\" />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n    </>\n  );\n}\n\nexport default MenuAppBar;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#bad7f2\",\n    },\n    secondary: {\n      main: \"#f2bac9\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport TodoList from \"../components/TodoList\";\nimport ScrollTop from \"../components/ScrollTop\";\nimport {\n  Container,\n  Typography,\n  Toolbar,\n  CssBaseline,\n  Fab,\n} from \"@material-ui/core\";\nimport MenuAppBar from \"../components/MenuAppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"../../theme\";\n// const theme = {};\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <MenuAppBar />\n\n      <div className={classes.offset} />\n\n      <Toolbar id=\"back-to-top-anchor\" />\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"h1\" color=\"primary\">\n          What's next?\n        </Typography>\n        <TodoList />\n      </Container>\n\n      <ScrollTop>\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CREATE_TODO,\n  REMOVE_TODO,\n  COMPLETE_TODO,\n  LOAD_TODOS_IN_PROGRESS,\n  LOAD_TODOS_SUCCESS,\n  LOAD_TODOS_FAILURE,\n} from \"../actions/todoAction\";\n\n/*\n * Reducers specify how the application's state changes in response to actions sent to the store.\n * The reducer is a pure function that takes the previous state and an action, and returns the next state.\n * Given the same arguments, it should calculate the next state and return it.\n * No surprises. No side effects. No API calls. No mutations. Just a calculation.\n */\n\n/* State overview\n * {\n *    todos: {\n *       data: [...],\n *       isLoading: false,\n *    },\n * }\n */\nconst todosInitialState = { data: [], isLoading: false };\n\nexport const todos = (state = todosInitialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_TODO: {\n      const { todo } = payload;\n      return { ...state, data: state.data.concat(todo) };\n    }\n    case REMOVE_TODO: {\n      const { deletedTodo } = payload;\n      return {\n        ...state,\n        data: state.data.filter((todo) => todo.text !== deletedTodo.text),\n      };\n    }\n    case COMPLETE_TODO: {\n      const { updatedTodo } = payload;\n      return {\n        ...state,\n        data: state.data.map((todo) => {\n          if (todo.text === updatedTodo.text) {\n            return updatedTodo;\n          }\n          return todo;\n        }),\n      };\n    }\n    case LOAD_TODOS_SUCCESS: {\n      const { todos } = payload;\n      return {\n        ...state,\n        data: todos,\n        isLoading: false,\n      };\n    }\n    case LOAD_TODOS_IN_PROGRESS: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n    case LOAD_TODOS_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { todos } from \"./reducers\";\n\n// Register the reducers\nconst reducers = {\n  todos,\n};\n\nconst rootReducer = combineReducers(reducers);\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export const configureStore = () => createStore(rootReducer);\n// export const configureStore = () => createStore(persistedReducer);\nexport const configureStore = () =>\n  createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n// Troubleshooting\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#access-file-url-file\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./stores/store\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\n\nconst store = configureStore();\nconst persistor = persistStore(store);\n\n// PERMACRASH!!!!! when the state is screwed up makes the app keep crashing.\n// Solution : DELETE the persist data from local storage\n// Chrome browser -> Inspect -> Application -> Storage -> LoaclStorage -> delete the persist:root\n\nReactDOM.render(\n  // <Provider store={configureStore()}>\n\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={<div>Loading...</div>}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}